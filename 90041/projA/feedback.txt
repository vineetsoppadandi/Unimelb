============================================
vis/result.rtx
21:33:55_Wednesday_28_March_2018
============================================
Feedback:
	Your program ("Nimsys.java") has been submitted successfully.
	Compiling your program with "javac"...
	Your program has been result.rtxd successfully :-)
Now, it's your responsibility to test your program for correctness!
Here is a simple test case, and the results:
============================================
Test for input file: in1
Expected results:							Your results:
Welcome to Nim								Welcome to Nim

Please enter Player 1's name:						Please enter Player 1's name:

Please enter Player 2's name:						Please enter Player 2's name:

Please enter upper bound of stone removal:				Please enter upper bound of stone removal:

Please enter initial number of stones:					Please enter initial number of stones:

12 stones left: * * * * * * * * * * * *					12 stones left: * * * * * * * * * * * *
Luke's turn - remove how many?						Luke's turn - remove how many?

9 stones left: * * * * * * * * *					9 stones left: * * * * * * * * *
Han's turn - remove how many?						Han's turn - remove how many?

8 stones left: * * * * * * * *						8 stones left: * * * * * * * *
Luke's turn - remove how many?						Luke's turn - remove how many?

7 stones left: * * * * * * *						7 stones left: * * * * * * *
Han's turn - remove how many?						Han's turn - remove how many?

5 stones left: * * * * *						5 stones left: * * * * *
Luke's turn - remove how many?						Luke's turn - remove how many?

2 stones left: * *							2 stones left: * *
Han's turn - remove how many?						Han's turn - remove how many?

1 stones left: *							1 stones left: *
Luke's turn - remove how many?						Luke's turn - remove how many?

Game Over								Game Over
Han wins!								Han wins!

Do you want to play again (Y/N):					Do you want to play again (Y/N):
Please enter upper bound of stone removal:				Please enter upper bound of stone removal:

Please enter initial number of stones:					Please enter initial number of stones:

15 stones left: * * * * * * * * * * * * * * *				15 stones left: * * * * * * * * * * * * * * *
Luke's turn - remove how many?						Luke's turn - remove how many?

14 stones left: * * * * * * * * * * * * * *				14 stones left: * * * * * * * * * * * * * *
Han's turn - remove how many?						Han's turn - remove how many?

12 stones left: * * * * * * * * * * * *					12 stones left: * * * * * * * * * * * *
Luke's turn - remove how many?						Luke's turn - remove how many?

9 stones left: * * * * * * * * *					9 stones left: * * * * * * * * *
Han's turn - remove how many?						Han's turn - remove how many?

5 stones left: * * * * *						5 stones left: * * * * *
Luke's turn - remove how many?						Luke's turn - remove how many?

Game Over								Game Over
Han wins!								Han wins!

Do you want to play again (Y/N):					Do you want to play again (Y/N):

Your results seem to be CORRECT :-).
============================================
src/NimPlayer.java
21:33:53_Wednesday_28_March_2018
============================================
//package Assignment_1;

/**
 * 
 * @ STDENT NAME: VINEET SOPPADANDI			STUDENT NUMBER: 888495
 * NimPlayer used to return the value of stones to be removed by the respective player
 */

import java.util.Scanner;

public class NimPlayer {																			  // Player class called NimPlayer

	public String name;																				    // instance "name" to obtain the name of the players 
	int removeStones; 
		public int removestones(Scanner n){													// method created to get the number of stones that need to be removed
		System.out.println(name +"'s turn - remove how many?");
 
		removeStones = n.nextInt();															  // remove_stones variable used to store use input of stones to remove
		return removeStones;																		    // method returns the numbers of stones the player wants to remove
	}
}

============================================
src/Nimsys.java
21:33:54_Wednesday_28_March_2018
============================================
//package Assignment_1;

/**
 * Nimsys file, a Nim game where each player takes the number to stones with out exceeding the upper bound. 
 * The player removing the last stone is the looser and the other is the winner. 
 * This games logic in written in code to be played on computer using JAVA
 * Takes the details of 2 players
 * sets the upper bound and the initial number of stones at the start
 * Each players get a turn to remove the stones unitll none are left
 * @ STDENT NAME: VINEET SOPPADANDI			STUDENT NUMBER: 888495
 *
 */

import java.util.Scanner;
public class Nimsys {

	public static void main(String[] arg){

		Scanner scannerobject = new Scanner(System.in); 		                              // creating object scannerobject

		System.out.println("Welcome to Nim");   		                                      // Introduction to Nim game
		System.out.println();
		System.out.println("Please enter Player 1's name:");
		String player1 = scannerobject.next();					                                  // Input for Player 1 name 

		NimPlayer p1 = new NimPlayer();							                                      // Creating p1 object
		p1.name = player1;										                                            // storing player 1 name in p1 object
		System.out.println();

		System.out.println("Please enter Player 2's name:");
		String player2 = scannerobject.next();					                                  // Input for player 2 name 

		NimPlayer p2 = new NimPlayer();							                                      // creating p2 object
		p2.name = player2;										                                            // Storing p2 name 
		System.out.println();

		for(int i = 0;i<1000;i++){												                                // Forloop used to make the game continue when player wants to play again.
			System.out.println("Please enter upper bound of stone removal:");
			int b = scannerobject.nextInt();							                                  // User input the upper bound, variable denoted as Upper_Bound

			System.out.println();
			System.out.println("Please enter initial number of stones:");		
			int iniStones = scannerobject.nextInt();							                          // User input for initial stones, variable denoted as ini_stones

			System.out.println();
			System.out.print(iniStones + " stones left:");						                      // print number of stones " *"
			for(int star=1; star<=iniStones;star++){
				System.out.print(" *");
			}

			int rStones = iniStones;											                                  // R_stones = total remaining stones
			for(int j = 0;j<1000;j++){											                                // Forloop used to make the players have multiple turns un till the game is over.

				System.out.println();
				int rmovestones= p1.removestones(scannerobject);						                  // The game starts with player1, requires input from player to remove stones
				rStones = rStones - rmovestones;									                            // r_stones variable denotes the number stones player wants to remove 
				System.out.println();
				if(rStones!=0){												                                        // Conditiion such that it will not print "0 stones left"
					System.out.print(rStones + " stones left:");
				}
				for(int star=1; star<=rStones;star++){							                          // print number of stones " *"
					System.out.print(" *");
				}

				if(rStones==0){												                                        // when no stones are left
					System.out.println("Game Over");
					System.out.println(p2.name+" wins!");
					break;
				}

				System.out.println();
				rmovestones = p2.removestones(scannerobject);						                      // r_stones variable denotes the number stones player wants to remove
				rStones = rStones - rmovestones;
				System.out.println();

				if(rStones!=0){                                                               // Conditiion such that it will not print "0 stones left"
					System.out.print(rStones + " stones left:");				
				}
				for(int star=1; star<=rStones;star++){							                          // print the number of stones left by this symbol " *"
					System.out.print(" *");
				}

				if(rStones==0){												                                        // When there are no stones left
					System.out.println("Game Over");
					System.out.println(p1.name+" wins!");
					break;
				}
			j++;																                                            // safety net variable
			}

			System.out.println();
			System.out.print("Do you want to play again (Y/N):"); 	                        // requires user input to restart/exit the game

			String response = scannerobject.next();

			if(!(response.equals("Y"))){										                                // The response given by the user is not "Y" the program will exit
				System.exit(0);
			}
      System.out.println();
		i++;																	                                            // safety net variable
		}
	}
}

